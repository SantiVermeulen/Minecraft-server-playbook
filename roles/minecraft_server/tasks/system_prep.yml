---
# Systeemvoorbereidingstaken
# Dit bestand behandelt alle systeemvoorbereidingen, inclusief pakketinstallatie en firewallconfiguratie

- name: Update alle pakketten (alleen voor RedHat/Rocky)
  ansible.builtin.dnf:  # noqa package-latest
    name: "*"
    state: latest
    update_cache: true
  register: system_update
  retries: 3
  delay: 5
  until: system_update is success
  when: ansible_facts['os_family'] == 'RedHat'

- name: Installeer vereiste pakketten
  ansible.builtin.dnf:
    name:
      - java-17-openjdk
      - screen
      - wget
      - tar
      - git
      - firewalld
      - cronie
    state: present
  register: package_install
  retries: 3
  delay: 5
  until: package_install is success
  when: ansible_facts['os_family'] == 'RedHat'

- name: Start en activeer firewalld
  ansible.builtin.service:
    name: firewalld
    state: started
    enabled: true
  register: firewalld_start
  when: ansible_facts['os_family'] == 'RedHat'

- name: Configureer firewall regels
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  loop: "{{ minecraft_server_firewall_allowed_ports }}"
  register: firewall_config
  retries: 3
  delay: 5
  until: firewall_config is success
  when: ansible_facts['os_family'] == 'RedHat'

- name: Update alle pakketten (alleen voor Ubuntu/Debian)
  ansible.builtin.apt:
    update_cache: yes
    upgrade: dist
  register: system_update_ubuntu
  retries: 3
  delay: 5
  until: system_update_ubuntu is success
  when: ansible_facts['os_family'] == 'Debian'

- name: Installeer vereiste pakketten (alleen voor Ubuntu/Debian)
  ansible.builtin.apt:
    name:
      - openjdk-17-jre-headless
      - screen
      - wget
      - tar
      - git
      - ufw
      - cron
    state: present
    update_cache: yes
  register: package_install_ubuntu
  retries: 3
  delay: 5
  until: package_install_ubuntu is success
  when: ansible_facts['os_family'] == 'Debian'

- name: Start en activeer UFW (alleen voor Ubuntu/Debian)
  ansible.builtin.ufw:
    state: enabled
    policy: allow
  register: ufw_start
  when: ansible_facts['os_family'] == 'Debian'

- name: Configureer UFW regels (alleen voor Ubuntu/Debian)
  ansible.builtin.ufw:
    rule: allow
    port: "{{ item.split('/')[0] }}"
    proto: "{{ item.split('/')[1] }}"
  loop: "{{ minecraft_server_firewall_allowed_ports }}"
  register: ufw_config
  retries: 3
  delay: 5
  until: ufw_config is success
  when: ansible_facts['os_family'] == 'Debian' 